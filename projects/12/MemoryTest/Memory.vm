function Memory.getFreelist 0
push static 1
return
function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push constant 0
push static 1
add
push constant 14335
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 3
push static 1
pop local 0
label WHILE_EXP0
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 1
add
lt
not
if-goto WHILE_END0
push local 0
pop local 1
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 5800
call Sys.error 1
pop temp 0
push constant 5800
return
label IF_FALSE0
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 1
add
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 2
push local 0
push constant 1
add
pop local 0
push constant 1
push local 1
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push constant 0
push local 0
add
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 1
add
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 1
add
pop local 0
push constant 0
push local 0
add
push argument 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
label IF_END1
push local 0
return
function Memory.deAlloc 3
push argument 0
push constant 1
sub
pop local 0
push static 1
pop local 1
label WHILE_EXP0
push local 1
push local 0
lt
push local 1
push constant 0
gt
and
not
if-goto WHILE_END0
push local 1
pop local 2
push constant 1
push local 1
add
pop pointer 1
push that 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 1
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 2
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
call Memory.defrag 0
pop temp 0
push constant 0
return
function Memory.defrag 2
push static 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 1
add
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 0
add
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 0
push local 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
