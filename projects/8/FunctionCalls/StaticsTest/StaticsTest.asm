@256
D=A
@SP
M=D
@return_address_0
D=A
@R13
M=D
@SP
M=M+1
A=M-1
M=D
@Sys.init
D=A
@R14
M=D
@0
D=A
@R15
M=D
@$$call
0;JMP
(return_address_0)
($$gt)
@SP
AM=M-1
D=M
A=A-1
MD=M-D
@$$jump_if_gt_true
D;JGT
@SP
A=M-1
M=0
@$$resume_gt
0;JMP
($$jump_if_gt_true)
@SP
A=M-1
M=-1
($$resume_gt)
@R13
A=M
0;JMP
($$lt)
@SP
AM=M-1
D=M
A=A-1
MD=M-D
@$$jump_if_lt_true
D;JLT
@SP
A=M-1
M=0
@$$resume_lt
0;JMP
($$jump_if_lt_true)
@SP
A=M-1
M=-1
($$resume_lt)
@R13
A=M
0;JMP
($$eq)
@SP
AM=M-1
D=M
A=A-1
MD=M-D
@$$jump_if_eq_true
D;JEQ
@SP
A=M-1
M=0
@$$resume_eq
0;JMP
($$jump_if_eq_true)
@SP
A=M-1
M=-1
($$resume_eq)
@R13
A=M
0;JMP
($$return)
@LCL
D=M
@FRAME
M=D
@FRAME
D=M
@5
AD=D-A
D=M
@R13
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@FRAME
D=M
@2
AD=D-A
D=M
@THIS
M=D
@FRAME
D=M
@3
AD=D-A
D=M
@ARG
M=D
@FRAME
D=M
@4
AD=D-A
D=M
@LCL
M=D
@R13
A=M
0;JMP
($$call)
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@R15
D=D-M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Class1.set 0
(Class1.set)
// push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 0
@SP
AM=M-1
D=M
@Class1.0
M=D
// push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 1
@SP
AM=M-1
D=M
@Class1.1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@$$return
0;JMP
// function Class1.get 0
(Class1.get)
// push static 0
@Class1.0
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Class1.1
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return
@$$return
0;JMP
// function Class2.set 0
(Class2.set)
// push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 0
@SP
AM=M-1
D=M
@Class2.0
M=D
// push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
M=M+1
A=M-1
M=D
// pop static 1
@SP
AM=M-1
D=M
@Class2.1
M=D
// push constant 0
@0
D=A
@SP
M=M+1
A=M-1
M=D
// return
@$$return
0;JMP
// function Class2.get 0
(Class2.get)
// push static 0
@Class2.0
D=M
@SP
M=M+1
A=M-1
M=D
// push static 1
@Class2.1
D=M
@SP
M=M+1
A=M-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return
@$$return
0;JMP
// function Sys.init 0
(Sys.init)
// push constant 6
@6
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 8
@8
D=A
@SP
M=M+1
A=M-1
M=D
// call Class1.set 2
@return_address_1
D=A
@R13
M=D
@SP
M=M+1
A=M-1
M=D
@Class1.set
D=A
@R14
M=D
@2
D=A
@R15
M=D
@$$call
0;JMP
(return_address_1)
// pop temp 0 // dumps the return value
@SP
AM=M-1
D=M
@5
M=D
// push constant 23
@23
D=A
@SP
M=M+1
A=M-1
M=D
// push constant 15
@15
D=A
@SP
M=M+1
A=M-1
M=D
// call Class2.set 2
@return_address_2
D=A
@R13
M=D
@SP
M=M+1
A=M-1
M=D
@Class2.set
D=A
@R14
M=D
@2
D=A
@R15
M=D
@$$call
0;JMP
(return_address_2)
// pop temp 0 // dumps the return value
@SP
AM=M-1
D=M
@5
M=D
// call Class1.get 0
@return_address_3
D=A
@R13
M=D
@SP
M=M+1
A=M-1
M=D
@Class1.get
D=A
@R14
M=D
@0
D=A
@R15
M=D
@$$call
0;JMP
(return_address_3)
// call Class2.get 0
@return_address_4
D=A
@R13
M=D
@SP
M=M+1
A=M-1
M=D
@Class2.get
D=A
@R14
M=D
@0
D=A
@R15
M=D
@$$call
0;JMP
(return_address_4)
// label END
(Sys.init$END)
// goto END
@Sys.init$END
0;JMP
